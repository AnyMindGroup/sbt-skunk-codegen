version: 2.1

.sbt_cache_key: &sbt_cache_key
                  deps-v1-{{ checksum "project/build.properties" }}-{{ checksum "build.sbt" }}-{{ checksum "project/plugins.sbt" }}

executors:

  docker:
    docker:
      - image: cimg/openjdk:17.0

  docker-test:
    docker:
      - image: cimg/openjdk:17.0
      - image: postgres:14-alpine
        environment:
          POSTGRES_PASSWORD: postgres

commands:

  store_dependencies:
    steps:
      - save_cache:
          name: Storing dependency cache
          key: *sbt_cache_key
          paths:
            - ~/.ivy2
            - ~/.sbt
            - ~/.cache/coursier

  store_build:
    steps:
      - save_cache:
          name: Storing build
          key: build-{{ .Revision }}
          paths:
            - target
            - modules/core/target
            - modules/sbt/target
            - project/target
            - project/project

  restore_build:
    steps:
      - restore_cache:
          name: Restoring build
          keys:
            - build-{{ .Revision }}

  restore_dependencies:
    steps:
      - restore_cache:
          name: Restoring dependency cache
          key: *sbt_cache_key

jobs:

  build:
    executor: docker
    steps:
      - checkout
      - restore_dependencies
      - run: sbt compile
      - store_build

  add_tag:
    executor: docker
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "f3:b1:d0:00:b8:5d:26:30:6a:ec:b9:58:35:4c:34:aa"
      - run:
          name: Configure git user
          command: |
            git config --add --global user.name "tech"
            git config --add --global user.email tech@anymindgroup.com
      - run: scripts/tag.sh

  test:
    executor: docker-test
    steps:
      - checkout
      - restore_dependencies
      - restore_build
      - run:
          name: Test
          command: |
            sbt scripted
      - store_dependencies

  publish:
    executor: docker
    steps:
      - checkout
      - restore_dependencies
      - restore_build
      - run:
          command: sbt publish

workflows:

  pull_request:
    jobs:
      - build:
          context:
            - anychat-be
          filters:
            branches:
              ignore:
                - master
      - test:
          context:
            - anychat-be
          requires:
            - build

  integration:
    jobs:
      - build:
          context:
            - anychat-be
          filters:
            branches:
              only:
                - master
      - test:
          context:
            - anychat-be
          requires:
            - build
      - add_tag:
          requires:
            - test

  release:
    jobs:
      - publish:
          context:
            - anychat-be
          filters:
            tags:
              only: /v\d+\.\d+\.\d+/
            branches:
              ignore: /.*/
